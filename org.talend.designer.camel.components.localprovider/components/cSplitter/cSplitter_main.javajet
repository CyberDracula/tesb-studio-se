<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String language = ElementParameterParser.getValue(node, "__LANGUAGES__");
	String expression = ElementParameterParser.getValue(node, "__EXPRESSION__");
	String useNamespaces = ElementParameterParser.getValue(node, "__USE_NAMESPACES__");
	
	boolean useStrategy = "true".equals(ElementParameterParser.getValue(node,"__USE_STRATEGY__"));
	String aggregationStrategy = ElementParameterParser.getValue(node,"__AGGREGATION_STRATEGY__");
	
	boolean arallelProcessing="true".equals(ElementParameterParser.getValue(node, "__PARALLET_PROCESSING__"));
	boolean stopOnException="true".equals(ElementParameterParser.getValue(node, "__STOP_ON_EXCEPTION__"));
	boolean streaming="true".equals(ElementParameterParser.getValue(node, "__STREAMING__"));
	boolean shareUnitOfWork="true".equals(ElementParameterParser.getValue(node, "__SHARE_UNIT_OF_WORK__"));
	
	String timeout=ElementParameterParser.getValue(node, "__TIMEOUT__");
	boolean hasTimeout=(timeout!=null&&timeout.matches("\\s*\\d+\\s*"));
	
	List< ? extends IConnection> conns = node.getIncomingConnections();
	if(conns.size()>0) {
%>
		.split(
<%
			if("xpath".equals(language) && "true".equals(useNamespaces)){
%>			
		xpath(<%=expression%>,<%=cid%>NSMap)
<%
			}else if("none".equals(language)){
%>
		<%=expression%>
<%
			}else{
%>
		<%=language%>(<%=expression%>)
<%			}
			if(useStrategy){
				
%>
		,new <%=aggregationStrategy%>()
<%
			}
%>
		)
<%
		if(arallelProcessing){
			%>.parallelProcessing()<%
		}
		if(stopOnException){
			%>.stopOnException()<%
		}
		if(streaming){
			%>.streaming()<%
		}
		if(shareUnitOfWork){
			%>.shareUnitOfWork()<%
		}
		if(hasTimeout){
			%>.timeout(<%=timeout%>)<%
		}
	}
%>
