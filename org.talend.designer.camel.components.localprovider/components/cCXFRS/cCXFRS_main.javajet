<%@ jet 
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IElementParameter
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.designer.codegen.config.NodeParamsHelper
    java.util.List
"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	NodeParamsHelper paramsHelper = new NodeParamsHelper(node);

	String acceptType = paramsHelper.getVisibleStringParam("__ACCEPT_TYPE__");
	String responseClass = "*/*".equals(acceptType) ? "String.class" : "org.w3c.dom.Document.class";
	String contentType = paramsHelper.getVisibleStringParam("__CONTENT_TYPE__");

	//boolean isStudioEEVersion = org.talend.core.PluginChecker.isTIS();

	String uri = cid;
	// http://jira.talendforge.org/browse/TESB-5241
	/*
	 * change to use label + unique to make it unique but readable
	 */
	IElementParameter param = node.getElementParameter("LABEL");
	if(param != null && !"__UNIQUE_NAME__".equals(param.getValue())){
		uri = (String)param.getValue()+'_'+uri;
	}

	if (node.getIncomingConnections().isEmpty()) {
%>
		from(endpoint(uriMap.get("<%=uri%>"))).removeHeader(org.apache.camel.component.cxf.common.message.CxfConstants.OPERATION_NAME)
		.process(new org.apache.camel.Processor() {
				public void process(org.apache.camel.Exchange exchange) throws Exception {
					org.apache.camel.Message inMessage = exchange.getIn();
					String camelHttpQuery = (String) inMessage.getHeader(org.apache.camel.Exchange.HTTP_QUERY);
					java.util.Map<String, String> httpQuery = new java.util.HashMap<String, String>();
					for (String rawQuery : camelHttpQuery.split("&")) {
						String[] query = rawQuery.split("=");
						httpQuery.put(query[0], query[1]);
					}
					inMessage.setHeader("http", httpQuery);
				}
			})
<%
	} else {
%>
		.process(new org.apache.camel.Processor() {
				public void process(org.apache.camel.Exchange exchange) throws Exception {
					exchange.setPattern(org.apache.camel.ExchangePattern.InOut);
					org.apache.camel.Message inMessage = exchange.getIn();
					inMessage.setHeader(org.apache.camel.Exchange.HTTP_PATH, <%=ElementParameterParser.getValue(node, "__PATH__")%>);
					inMessage.setHeader(org.apache.camel.Exchange.HTTP_METHOD, "<%=ElementParameterParser.getValue(node, "__HTTP_METHOD__")%>");
<% if (!acceptType.isEmpty()) { %>
					
					inMessage.setHeader(org.apache.camel.Exchange.ACCEPT_CONTENT_TYPE, "<%=acceptType%>");
					inMessage.setHeader(org.apache.camel.component.cxf.CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, <%=responseClass%>);
<% } %>
<% if (!contentType.isEmpty()) { %>
					inMessage.setHeader(org.apache.camel.Exchange.CONTENT_TYPE, "<%=contentType%>");
<% } %>
				}
			}).to(endpoint(uriMap.get("<%=uri%>")))
<%
	}
%>
