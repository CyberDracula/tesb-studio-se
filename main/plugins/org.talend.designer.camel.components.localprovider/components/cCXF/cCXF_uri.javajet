<%@ jet 
%>
<%
// included in header_route.javajet
// variables : String cid;
// String componentName;
// return variables:
// String uri = ""; generate the endpoint uri.
// String statements = null; generate the statements before wrapping endpoint uri.

String url = ElementParameterParser.getValue(node, "__ADDRESS__").trim();

String dataformat = ElementParameterParser.getValue(node, "__DATAFORMAT__");

String useServiceRegistry = ElementParameterParser.getValue(node, "__ENABLE_REGISTRY__");
if(!isStudioEEVersion || "RAW".equals(dataformat) || "CXF_MESSAGE".equals(dataformat)){
	useServiceRegistry = "false";
}

String useSecurity = ElementParameterParser.getValue(node, "__ENABLE_SECURITY__");
if("true".equals(useServiceRegistry) || "RAW".equals(dataformat) || "CXF_MESSAGE".equals(dataformat)){
	useSecurity = "false";
}

List<? extends IConnection> conns = node.getIncomingConnections();
if ("true".equals(ElementParameterParser.getValue(node, "__ENABLE_SL__")) 
		&&  "false".equals(useServiceRegistry)) {
	if (!conns.isEmpty()) {
		// consumer role
		url = "((null == bundleContext) ? " + url + " : \"locator://locator/\")";
	}
}

String serviceType = ElementParameterParser.getValue(node, "__SERVICE_TYPE__");

StringBuilder sb = new StringBuilder();
sb.append("\"cxf://\"+").append(url).append("+\"?" + serviceType + "=\"");

if ("wsdlURL".equals(serviceType)) {

	//http://jira.talendforge.org/browse/TESB-6226
    String filePath = "";
	
	String wsdlType = ElementParameterParser.getValue(node, "__WSDL_TYPE__");
	if("file".equals(wsdlType)){
	  filePath =  ElementParameterParser.getValue(node, "__WSDL_FILE__");
	}else{
		filePath =  ElementParameterParser.getValue(node, "__ROUTE_RESOURCE_TYPE_RES_URI__");
		filePath = "\"classpath:" + filePath + "\"";
	}
	filePath.replaceAll("\\\\","/");
	sb.append("+").append(filePath);
} else {
	sb.append("+" + ElementParameterParser.getValue(node, "__SERVICE_CLASS__"));
}



sb.append("+\"&dataFormat=" + dataformat + "\"");

String serviceName = helper.getVisibleStringParam("__SERVICE_NAME__");
if(!serviceName.isEmpty()) {
	sb.append("+\"&serviceNameString=\"+").append(serviceName);
}
String portName = helper.getVisibleStringParam("__PORT_NAME__");
if(!portName.isEmpty()) {
	sb.append("+\"&endpointNameString=\"+").append(portName);
}
String operationName = helper.getVisibleStringParam("__OPERATION_NAME__").trim();
if(!operationName.isEmpty() && !operationName.equals("")) {
	StringBuilder stmt = new StringBuilder();
	stmt.append("QName operation = null;\n");
	stmt.append("try { operation = QName.valueOf(")
		.append(operationName)
		.append(");}catch(Exception e){}\n");
	statements = stmt.toString();
	sb.append("+ operation == null?\"\":(")
	.append("\"&defaultOperationNamespace=\"+operation.getNamespaceURI()")
	.append("+\"&defaultOperationName=\"+operation.getLocalPart())");
}

List<Map<String, String>> tableValues = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__ADVARGUMENTS__");
for (Map<String, String> map : tableValues) {
	String argName = map.get("NAME").trim();
	String argValue = map.get("VALUE").trim();
	sb.append("+\"&\"+" + argName + "+\"=\"+" + argValue);
}

if(!conns.isEmpty()){
	sb.append("+\"&headerFilterStrategy=#CXF_PAYLOAD_HEADER_FILTER\"");
	sb.append("+\"&properties.id=\"+\"");
	sb.append(node.getUniqueName());
	sb.append("\"");
}else if("true".equals(useServiceRegistry) || ("true".equals(useSecurity) && "SAML".equals(ElementParameterParser.getValue(node, "__SECURITY_TYPE__")))) {
	sb.append("+\"&cxfBinding=#DEFAULT_CXF_BINDING\"");
}
uri = sb.toString();
%>
