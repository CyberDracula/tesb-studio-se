<%@ jet
	imports="
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.process.INode
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn

		org.talend.designer.codegen.config.CodeGeneratorArgument

		java.util.List
		java.util.Map
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode) codeGenArgument.getArgument();

if (node.getProcess().getNodesOfType("tRESTRequestLoop").isEmpty()) { %>
	System.err.println("[WARN] nonsense: tRESTResponse component used without tRESTRequest component on the job");
<% } else {

	String cid = node.getUniqueName();
	List<IMetadataTable> metadatas = node.getMetadataList();
	if (null != metadatas && 0 < metadatas.size()) {
		IMetadataTable metadata = metadatas.get(0);
		if (null != metadata) {
			List<? extends IConnection> conns = node.getIncomingConnections();
			if (null != conns && 0 < conns.size()) {
				IConnection conn = conns.get(0);
				if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {

%>
	if (globalMap.containsKey("restResponse")) {
		throw new RuntimeException("Rest response already sent.");
	} else if (!globalMap.containsKey("restRequest")) {
		throw new RuntimeException("Not received rest request yet.");
	} else {
<%

String selectedStatusCode = ElementParameterParser.getValue(node, "__STATUS_CODE__");
if ("CUSTOM".equals(selectedStatusCode)) { %>
		Integer restProviderStatusCode_<%=cid%> = <%= ElementParameterParser.getValue(node, "__CUSTOM_STATUS_CODE__")%>;
<% } else { %>
		Integer restProviderStatusCode_<%=cid%> = <%= selectedStatusCode%>;
<% } %>

		String contentTypeHeader_<%=cid%> = null;
		Object restProviderResponse_<%=cid%> = null;
<%
IMetadataColumn column = conn.getMetadataTable().getColumn("string");
if (null != column && "id_String".equals(column.getTalendType())) { %>
		restProviderResponse_<%=cid%> = <%=conn.getName()%>.string;
<%
}

column = conn.getMetadataTable().getColumn("body");
if (null != column) {
	if ("id_Document".equals(column.getTalendType())) {
%>
		if (null != <%=conn.getName()%>.body) {
			restProviderResponse_<%=cid%> = <%=conn.getName()%>.body.getDocument();
		}
<%	} else { %>
		restProviderResponse_<%=cid%> = <%=conn.getName()%>.body;
		if (null != restProviderResponse_<%=cid%>) {
			<% if ("id_String".equals(column.getTalendType())) { %>
				contentTypeHeader_<%=cid%> = "text/plain";
			<% } %>
			<% if ("id_byte[]".equals(column.getTalendType())) { %>
				contentTypeHeader_<%=cid%> = "application/octet-stream";
			<% } %>
		}
<%	}
} %>

		java.util.Map<String, String> restProviderResponseHeaders_<%=cid%> = new java.util.TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER);
		if (null != contentTypeHeader_<%=cid%>) {
			restProviderResponseHeaders_<%=cid%>.put("Content-Type", contentTypeHeader_<%=cid%>);
		}
<%
List<Map<String, String>> headers = (List<Map<String,String>>) ElementParameterParser.getObjectValue(node,"__RESPONSE_HEADERS__");
for (Map<String, String> header : headers) { %>
		restProviderResponseHeaders_<%=cid%>.put(<%=header.get("NAME") %>, <%=header.get("VALUE") %>);
<% } %>

		java.util.Map<String, Object> restResponse_<%=cid%> = new java.util.HashMap<String, Object>();
		restResponse_<%=cid%>.put("BODY", restProviderResponse_<%=cid%>);
		restResponse_<%=cid%>.put("STATUS", restProviderStatusCode_<%=cid%>);
		restResponse_<%=cid%>.put("HEADERS", restProviderResponseHeaders_<%=cid%>);
		restResponse_<%=cid%>.put("drop.json.root.element", Boolean.valueOf(<%=ElementParameterParser.getValue(node,"__UNWRAP_JSON_RESPONSE__")%>));
		globalMap.put("restResponse", restResponse_<%=cid%>);

	}
<%
				} // (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))
			} // (null != conns && 0 < conns.size())
		} // (null != metadata)
	} // (null != metadatas && 0 < metadatas.size())
}
%>
